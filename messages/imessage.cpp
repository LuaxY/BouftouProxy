#include "imessage.h"

IMessage::IMessage(ushort _id, uint _instanceId, ByteArray _data) : id(_id), instanceId(_instanceId), data(_data)
{

}

ushort IMessage::getId()
{
    return id;
}

uint IMessage::getInstanceId()
{
    return instanceId;
}

ByteArray IMessage::getData()
{
    return data;
}

QString IMessage::getName()
{
    switch (id) {
    case 1: return "ProtocolRequired"; break;
    case 2: return "NetworkDataContainerMessage"; break;
    case 3: return "HelloConnectMessage"; break;
    case 4: return "IdentificationMessage"; break;
    case 10: return "LoginQueueStatusMessage"; break;
    case 20: return "IdentificationFailedMessage"; break;
    case 21: return "IdentificationFailedForBadVersionMessage"; break;
    case 22: return "IdentificationSuccessMessage"; break;
    case 30: return "ServersListMessage"; break;
    case 40: return "ServerSelectionMessage"; break;
    case 41: return "SelectedServerRefusedMessage"; break;
    case 42: return "SelectedServerDataMessage"; break;
    case 50: return "ServerStatusUpdateMessage"; break;
    case 75: return "ConsoleMessage"; break;
    case 76: return "AdminCommandMessage"; break;
    case 101: return "HelloGameMessage"; break;
    case 109: return "AlreadyConnectedMessage"; break;
    case 110: return "AuthenticationTicketMessage"; break;
    case 111: return "AuthenticationTicketAcceptedMessage"; break;
    case 112: return "AuthenticationTicketRefusedMessage"; break;
    case 150: return "CharactersListRequestMessage"; break;
    case 151: return "CharactersListMessage"; break;
    case 152: return "CharacterSelectionMessage"; break;
    case 153: return "CharacterSelectedSuccessMessage"; break;
    case 160: return "CharacterCreationRequestMessage"; break;
    case 161: return "CharacterCreationResultMessage"; break;
    case 162: return "CharacterNameSuggestionRequestMessage"; break;
    case 164: return "CharacterNameSuggestionFailureMessage"; break;
    case 165: return "CharacterDeletionRequestMessage"; break;
    case 166: return "CharacterDeletionErrorMessage"; break;
    case 167: return "CharacterReplayRequestMessage"; break;
    case 170: return "SetCharacterRestrictionsMessage"; break;
    case 175: return "BasicTimeMessage"; break;
    case 176: return "BasicNoOperationMessage"; break;
    case 177: return "BasicDateMessage"; break;
    case 178: return "BasicDateRequestMessage"; break;
    case 179: return "BasicWhoIsNoMatchMessage"; break;
    case 180: return "BasicWhoIsMessage"; break;
    case 181: return "BasicWhoIsRequestMessage"; break;
    case 182: return "BasicPingMessage"; break;
    case 183: return "BasicPongMessage"; break;
    case 184: return "BasicAveragePingMessage"; break;
    case 189: return "SystemMessageDisplayMessage"; break;
    case 190: return "ScriptTooltipMessage"; break;
    case 200: return "GameContextCreateMessage"; break;
    case 201: return "GameContextDestroyMessage"; break;
    case 210: return "MapFightCountMessage"; break;
    case 220: return "CurrentMapMessage"; break;
    case 221: return "ChangeMapMessage"; break;
    case 225: return "MapInformationsRequestMessage"; break;
    case 226: return "MapComplementaryInformationsDataMessage"; break;
    case 250: return "GameContextCreateRequestMessage"; break;
    case 251: return "GameContextRemoveElementMessage"; break;
    case 252: return "GameContextRemoveMultipleElementsMessage"; break;
    case 253: return "GameContextMoveElementMessage"; break;
    case 254: return "GameContextMoveMultipleElementsMessage"; break;
    case 255: return "GameContextQuitMessage"; break;
    case 256: return "AbstractActorRolePlayInformationsMessage"; break;
    case 260: return "GameRolePlayShowCharacterMessage"; break;
    case 261: return "GameRolePlayShowMultipleCharactersMessage"; break;
    case 270: return "GameRolePlayShowMutantMessage"; break;
    case 271: return "GameRolePlayShowMultipleMutantsMessage"; break;
    case 280: return "GameRolePlayShowNpcMessage"; break;
    case 281: return "GameRolePlayShowMultipleNpcsMessage"; break;
    case 290: return "GameRolePlayShowGroupMonstersMessage"; break;
    case 291: return "GameRolePlayShowMultipleGroupsMonstersMessage"; break;
    case 300: return "GameRolePlayRemoveChallengeMessage"; break;
    case 301: return "GameRolePlayShowChallengeMessage"; break;
    case 500: return "CharacterStatsListMessage"; break;
    case 700: return "GameFightStartingMessage"; break;
    case 701: return "GameFightJoinRequestMessage"; break;
    case 702: return "GameFightJoinMessage"; break;
    case 703: return "GameFightPlacementPossiblePositionsMessage"; break;
    case 704: return "GameFightPlacementPositionRequestMessage"; break;
    case 705: return "GameFightPlacementPositionMessage"; break;
    case 706: return "GameFightPlacementPositionRefusedMessage"; break;
    case 707: return "GameFightOptionToggleMessage"; break;
    case 708: return "GameFightReadyMessage"; break;
    case 711: return "GameFightRemoveTeamMemberMessage"; break;
    case 712: return "GameFightStartMessage"; break;
    case 713: return "GameFightTurnListMessage"; break;
    case 714: return "GameFightTurnStartMessage"; break;
    case 715: return "GameFightTurnReadyRequestMessage"; break;
    case 716: return "GameFightTurnReadyMessage"; break;
    case 717: return "GameFightTurnChangeInformationsMessage"; break;
    case 718: return "GameFightTurnFinishMessage"; break;
    case 719: return "GameFightTurnEndMessage"; break;
    case 720: return "GameFightEndMessage"; break;
    case 721: return "GameFightLeaveMessage"; break;
    case 731: return "AbstractFighterInformationsMessage"; break;
    case 732: return "GameFightShowCharacterMessage"; break;
    case 733: return "GameFightShowMutantMessage"; break;
    case 734: return "GameFightShowMonsterMessage"; break;
    case 740: return "GameFightHumanReadyStateMessage"; break;
    case 745: return "GameRolePlayFreeSoulRequestMessage"; break;
    case 746: return "GameRolePlayGameOverMessage"; break;
    case 780: return "TextInformationMessage"; break;
    case 800: return "ChatSmileyRequestMessage"; break;
    case 801: return "ChatSmileyMessage"; break;
    case 820: return "ChatInsultReportMessage"; break;
    case 821: return "ChatMessageReportMessage"; break;
    case 850: return "ChatAbstractClientMessage"; break;
    case 851: return "ChatClientPrivateMessage"; break;
    case 852: return "ChatClientPrivateWithObjectMessage"; break;
    case 861: return "ChatClientMultiMessage"; break;
    case 862: return "ChatClientMultiWithObjectMessage"; break;
    case 870: return "ChatErrorMessage"; break;
    case 880: return "ChatAbstractServerMessage"; break;
    case 881: return "ChatServerMessage"; break;
    case 882: return "ChatServerCopyMessage"; break;
    case 883: return "ChatServerWithObjectMessage"; break;
    case 884: return "ChatServerCopyWithObjectMessage"; break;
    case 890: return "ChannelEnablingMessage"; break;
    case 891: return "ChannelEnablingChangeMessage"; break;
    case 892: return "EnabledChannelsMessage"; break;
    case 945: return "GameMapChangeOrientationRequestMessage"; break;
    case 946: return "GameMapChangeOrientationMessage"; break;
    case 950: return "GameMapMovementRequestMessage"; break;
    case 951: return "GameMapMovementMessage"; break;
    case 952: return "GameMapMovementConfirmMessage"; break;
    case 953: return "GameMapMovementCancelMessage"; break;
    case 954: return "GameMapNoMovementMessage"; break;
    case 955: return "SequenceStartMessage"; break;
    case 956: return "SequenceEndMessage"; break;
    case 957: return "GameActionAcknowledgementMessage"; break;
    case 1000: return "AbstractGameActionMessage"; break;
    case 1001: return "AbstractGameActionWithAckMessage"; break;
    case 1002: return "GameActionNoopMessage"; break;
    case 1004: return "GameActionFightTackledMessage"; break;
    case 1005: return "GameActionFightCastRequestMessage"; break;
    case 1009: return "GameActionDisplayFxMessage"; break;
    case 1010: return "GameActionFightSpellCastMessage"; break;
    case 1011: return "GameActionFightSpellCriticalMessage"; break;
    case 1030: return "GameActionFightPointsVariationMessage"; break;
    case 1031: return "GameActionFightTemporaryBoostMessage"; break;
    case 1032: return "GameActionFightLifePointVariationMessage"; break;
    case 1099: return "GameActionFightDeathMessage"; break;
    case 1200: return "SpellListMessage"; break;
    case 1201: return "SpellUpgradeSuccessMessage"; break;
    case 1202: return "SpellUpgradeFailureMessage"; break;
    case 1301: return "StartupActionsListMessage"; break;
    case 1302: return "StartupActionsExecuteMessage"; break;
    case 1303: return "StartupActionsObjetAttributionMessage"; break;
    case 1304: return "StartupActionFinishedMessage"; break;
    case 1408: return "ReservedHttpsConnectionMessage"; break;
    case 1501: return "GetPartsListMessage"; break;
    case 1502: return "PartsListMessage"; break;
    case 1503: return "DownloadPartMessage"; break;
    case 1504: return "PausePartMessage"; break;
    case 1505: return "ResumePartMessage"; break;
    case 1506: return "GetPartInfoMessage"; break;
    case 1508: return "PartInfoMessage"; break;
    case 1510: return "DownloadGetCurrentSpeedRequestMessage"; break;
    case 1511: return "DownloadCurrentSpeedMessage"; break;
    case 1512: return "DownloadSetSpeedRequestMessage"; break;
    case 1513: return "DownloadErrorMessage"; break;
    case 1603: return "ZaapTeleportRequestMessage"; break;
    case 1604: return "ZaapListMessage"; break;
    case 1700: return "ValidateSpellForgetMessage"; break;
    case 1801: return "PVPActivationCostMessage"; break;
    case 1810: return "SetEnablePVPRequestMessage"; break;
    case 1811: return "GetPVPActivationCostMessage"; break;
    case 2001: return "DebugHighlightCellsMessage"; break;
    case 2002: return "DebugClearHighlightCellsMessage"; break;
    case 3003: return "ObjectUseOnCharacterMessage"; break;
    case 3004: return "ObjectErrorMessage"; break;
    case 3005: return "ObjectDropMessage"; break;
    case 3009: return "InventoryWeightMessage"; break;
    case 3010: return "ObjectMovementMessage"; break;
    case 3013: return "ObjectUseOnCellMessage"; break;
    case 3014: return "ObjectGroundRemovedMessage"; break;
    case 3016: return "InventoryContentMessage"; break;
    case 3017: return "ObjectGroundAddedMessage"; break;
    case 3019: return "ObjectUseMessage"; break;
    case 3021: return "ObjectSetPositionMessage"; break;
    case 3022: return "ObjectDeleteMessage"; break;
    case 3023: return "ObjectQuantityMessage"; break;
    case 3024: return "ObjectDeletedMessage"; break;
    case 3025: return "ObjectAddedMessage"; break;
    case 3026: return "InventoryContentStorageMessage"; break;
    case 3029: return "ObjectModifiedMessage"; break;
    case 3147: return "MouseDebugDone"; break;
    case 3148: return "MouseDebugStart"; break;
    case 4001: return "FriendsGetListMessage"; break;
    case 4002: return "FriendsListMessage"; break;
    case 4004: return "FriendAddRequestMessage"; break;
    case 4033: return "FriendListWithSpouseMessage"; break;
    case 4307: return "ReservedHttpConnectConnectionMessage"; break;
    case 4369: return "ReservedHttpDeleteConnectionMessage"; break;
    case 4561: return "ReservedHttpGetConnectionMessage"; break;
    case 4625: return "ReservedHttpHeadConnectionMessage"; break;
    case 5001: return "InteractiveUseRequestMessage"; break;
    case 5002: return "InteractiveMapUpdateMessage"; break;
    case 5076: return "ReservedHttpOptionsConnectionMessage"; break;
    case 5139: return "ReservedHttpPostConnectionMessage"; break;
    case 5141: return "ReservedHttpPutConnectionMessage"; break;
    case 5396: return "ReservedHttpTraceConnectionMessage"; break;
    case 5501: return "LeaveDialogRequestMessage"; break;
    case 5502: return "LeaveDialogMessage"; break;
    case 5503: return "SetUpdateMessage"; break;
    case 5505: return "ExchangeRequestMessage"; break;
    case 5508: return "ExchangeAcceptMessage"; break;
    case 5509: return "ExchangeIsReadyMessage"; break;
    case 5510: return "ExchangeRequestCharacterMessage"; break;
    case 5511: return "ExchangeReadyMessage"; break;
    case 5512: return "ExchangeStartedMessage"; break;
    case 5513: return "ExchangeErrorMessage"; break;
    case 5514: return "ExchangeObjectMovePricedMessage"; break;
    case 5515: return "ExchangeObjectMessage"; break;
    case 5516: return "ExchangeObjectAddedMessage"; break;
    case 5517: return "ExchangeObjectRemovedMessage"; break;
    case 5518: return "ExchangeObjectMoveMessage"; break;
    case 5519: return "ExchangeObjectModifiedMessage"; break;
    case 5520: return "ExchangeObjectMoveKamaMessage"; break;
    case 5521: return "ExchangeKamaModifiedMessage"; break;
    case 5522: return "ExchangeRequestedMessage"; break;
    case 5523: return "ExchangeRequestedTradeMessage"; break;
    case 5524: return "GameActionFightPointsUseMessage"; break;
    case 5525: return "GameActionFightSlideMessage"; break;
    case 5526: return "GameActionFightReduceDamagesMessage"; break;
    case 5527: return "GameActionFightExchangePositionsMessage"; break;
    case 5528: return "GameActionFightTeleportOnSameMapMessage"; break;
    case 5529: return "GameActionFightPassNextTurnsMessage"; break;
    case 5530: return "GameActionFightReflectDamagesMessage"; break;
    case 5531: return "GameActionFightReflectSpellMessage"; break;
    case 5532: return "GameActionFightChangeLookMessage"; break;
    case 5533: return "GameActionFightDispellMessage"; break;
    case 5534: return "GameActionFightInvibilityMessage"; break;
    case 5535: return "GameActionFightStealKamaMessage"; break;
    case 5536: return "GameActionFightSummonCreatureMessage"; break;
    case 5537: return "KamasUpdateMessage"; break;
    case 5540: return "GameActionFightMarkCellsMessage"; break;
    case 5541: return "GameActionFightTriggerGlyphMessage"; break;
    case 5542: return "SubscriptionLimitationMessage"; break;
    case 5544: return "CharacterNameSuggestionSuccessMessage"; break;
    case 5545: return "CharactersListErrorMessage"; break;
    case 5546: return "GuildCreationValidMessage"; break;
    case 5547: return "GuildMemberKickedMessage"; break;
    case 5548: return "GuildInvitationStateRecrutedMessage"; break;
    case 5549: return "GuildChangeMemberParametersMessage"; break;
    case 5550: return "GuildGetInformationsMessage"; break;
    case 5551: return "GuildInvitationMessage"; break;
    case 5552: return "GuildInvitedMessage"; break;
    case 5553: return "GuildInformationsMessage"; break;
    case 5554: return "GuildCreationResultMessage"; break;
    case 5555: return "GuildCreationLeaveMessage"; break;
    case 5556: return "GuildInvitationAnswerMessage"; break;
    case 5557: return "GuildInformationsGeneralMessage"; break;
    case 5558: return "GuildInformationsMembersMessage"; break;
    case 5559: return "GuildKickMessage"; break;
    case 5560: return "GuildKickedMessage"; break;
    case 5561: return "GuildUIOpenedMessage"; break;
    case 5562: return "GuildLeftMessage"; break;
    case 5563: return "GuildInvitationStateRecruterMessage"; break;
    case 5564: return "GuildJoinedMessage"; break;
    case 5565: return "SpellForgetUIMessage"; break;
    case 5566: return "SpellBoostMessage"; break;
    case 5567: return "SpellMoveMessage"; break;
    case 5569: return "GameActionFightStateChangeMessage"; break;
    case 5570: return "GameActionFightUnmarkCellsMessage"; break;
    case 5571: return "GameActionFightKillMessage"; break;
    case 5572: return "GameFightUpdateTeamMessage"; break;
    case 5573: return "SubscriptionZoneMessage"; break;
    case 5574: return "PartyStopFollowRequestMessage"; break;
    case 5575: return "PartyUpdateMessage"; break;
    case 5576: return "PartyJoinMessage"; break;
    case 5577: return "PartyFollowMemberRequestMessage"; break;
    case 5578: return "PartyLeaderUpdateMessage"; break;
    case 5579: return "PartyMemberRemoveMessage"; break;
    case 5580: return "PartyAcceptInvitationMessage"; break;
    case 5581: return "PartyFollowStatusUpdateMessage"; break;
    case 5582: return "PartyRefuseInvitationMessage"; break;
    case 5583: return "PartyCannotJoinErrorMessage"; break;
    case 5584: return "CompassResetMessage"; break;
    case 5585: return "PartyInvitationRequestMessage"; break;
    case 5586: return "PartyInvitationMessage"; break;
    case 5587: return "PartyLocateMembersRequestMessage"; break;
    case 5588: return "PartyFollowThisMemberRequestMessage"; break;
    case 5589: return "CompassUpdatePartyMemberMessage"; break;
    case 5590: return "PartyKickedByMessage"; break;
    case 5591: return "CompassUpdateMessage"; break;
    case 5592: return "PartyKickRequestMessage"; break;
    case 5593: return "PartyLeaveRequestMessage"; break;
    case 5594: return "PartyLeaveMessage"; break;
    case 5595: return "PartyLocateMembersMessage"; break;
    case 5596: return "PartyRefuseInvitationNotificationMessage"; break;
    case 5597: return "GuildInformationsMemberUpdateMessage"; break;
    case 5598: return "GameActionFightLifePointsVariationMessage"; break;
    case 5599: return "FriendAddedMessage"; break;
    case 5600: return "FriendAddFailureMessage"; break;
    case 5601: return "FriendDeleteResultMessage"; break;
    case 5602: return "FriendSetWarnOnConnectionMessage"; break;
    case 5603: return "FriendDeleteRequestMessage"; break;
    case 5604: return "FriendSpouseJoinRequestMessage"; break;
    case 5605: return "FriendJoinRequestMessage"; break;
    case 5606: return "FriendSpouseFollowWithCompassRequestMessage"; break;
    case 5607: return "ClientKeyMessage"; break;
    case 5608: return "SpellUpgradeRequestMessage"; break;
    case 5609: return "StatsUpgradeResultMessage"; break;
    case 5610: return "StatsUpgradeRequestMessage"; break;
    case 5611: return "ShowCellRequestMessage"; break;
    case 5612: return "ShowCellMessage"; break;
    case 5613: return "ChallengeTargetsListMessage"; break;
    case 5614: return "ChallengeTargetsListRequestMessage"; break;
    case 5615: return "TaxCollectorDialogQuestionExtendedMessage"; break;
    case 5616: return "NpcDialogReplyMessage"; break;
    case 5617: return "NpcDialogQuestionMessage"; break;
    case 5618: return "NpcDialogCreationMessage"; break;
    case 5619: return "TaxCollectorDialogQuestionBasicMessage"; break;
    case 5620: return "NpcDialogCreationFailureMessage"; break;
    case 5621: return "NpcDialogCreationRequestMessage"; break;
    case 5622: return "QuestStepInfoRequestMessage"; break;
    case 5623: return "QuestListRequestMessage"; break;
    case 5624: return "NpcDialogLeaveMessage"; break;
    case 5625: return "QuestStepInfoMessage"; break;
    case 5626: return "QuestListMessage"; break;
    case 5627: return "QuestStepNoInfoMessage"; break;
    case 5628: return "ExchangeLeaveMessage"; break;
    case 5629: return "ExchangeLeaveRequestMessage"; break;
    case 5630: return "FriendWarnOnConnectionStateMessage"; break;
    case 5631: return "RolePlayShowActorMessage"; break;
    case 5632: return "GameRolePlayShowActorMessage"; break;
    case 5633: return "TaxCollectorMovementMessage"; break;
    case 5634: return "TaxCollectorErrorMessage"; break;
    case 5635: return "TaxCollectorAttackedResultMessage"; break;
    case 5636: return "GuildInfosUpgradeMessage"; break;
    case 5637: return "GameContextRefreshEntityLookMessage"; break;
    case 5638: return "NicknameRefusedMessage"; break;
    case 5639: return "NicknameChoiceRequestMessage"; break;
    case 5640: return "NicknameRegistrationMessage"; break;
    case 5641: return "NicknameAcceptedMessage"; break;
    case 5642: return "MapNpcsQuestStatusUpdateMessage"; break;
    case 5643: return "QuestStartRequestMessage"; break;
    case 5644: return "EmoteAddMessage"; break;
    case 5645: return "StorageKamasUpdateMessage"; break;
    case 5646: return "StorageInventoryContentMessage"; break;
    case 5647: return "StorageObjectUpdateMessage"; break;
    case 5648: return "StorageObjectRemoveMessage"; break;
    case 5649: return "JobCrafterDirectoryDefineSettingsMessage"; break;
    case 5650: return "JobCrafterDirectoryGenericMessage"; break;
    case 5651: return "JobCrafterDirectoryAddMessage"; break;
    case 5652: return "JobCrafterDirectorySettingsMessage"; break;
    case 5653: return "JobCrafterDirectoryRemoveMessage"; break;
    case 5654: return "JobExperienceUpdateMessage"; break;
    case 5655: return "JobDescriptionMessage"; break;
    case 5656: return "JobLevelUpMessage"; break;
    case 5657: return "JobUnlearntMessage"; break;
    case 5658: return "UpdateLifePointsMessage"; break;
    case 5659: return "JobCrafterDirectoryExchangeDataMessage"; break;
    case 5660: return "JobCrafterDirectoryExchangeFilterMessage"; break;
    case 5661: return "HouseKickIndoorMerchantRequestMessage"; break;
    case 5662: return "AdminQuietCommandMessage"; break;
    case 5663: return "BasicLatencyStatsMessage"; break;
    case 5664: return "BasicWhoAmIRequestMessage"; break;
    case 5665: return "BasicSetAwayModeRequestMessage"; break;
    case 5666: return "LockableChangeCodeMessage"; break;
    case 5667: return "LockableUseCodeMessage"; break;
    case 5668: return "LockableStateUpdateHouseDoorMessage"; break;
    case 5669: return "LockableStateUpdateStorageMessage"; break;
    case 5670: return "CharacterLevelUpMessage"; break;
    case 5671: return "LockableStateUpdateAbstractMessage"; break;
    case 5672: return "LockableCodeResultMessage"; break;
    case 5673: return "IgnoredAddRequestMessage"; break;
    case 5674: return "IgnoredListMessage"; break;
    case 5675: return "DocumentReadingBeginMessage"; break;
    case 5676: return "IgnoredGetListMessage"; break;
    case 5677: return "IgnoredDeleteResultMessage"; break;
    case 5678: return "IgnoredAddedMessage"; break;
    case 5679: return "IgnoredAddFailureMessage"; break;
    case 5680: return "IgnoredDeleteRequestMessage"; break;
    case 5681: return "TaxCollectorHireRequestMessage"; break;
    case 5682: return "TaxCollectorFireRequestMessage"; break;
    case 5683: return "EmotePlayMessage"; break;
    case 5684: return "LifePointsRegenBeginMessage"; break;
    case 5685: return "EmotePlayRequestMessage"; break;
    case 5686: return "LifePointsRegenEndMessage"; break;
    case 5687: return "EmoteRemoveMessage"; break;
    case 5688: return "EmotePlayErrorMessage"; break;
    case 5689: return "EmoteListMessage"; break;
    case 5690: return "EmotePlayAbstractMessage"; break;
    case 5691: return "EmotePlayMassiveMessage"; break;
    case 5692: return "GameActorDispositionInformations"; break;
    case 5693: return "GameEntityDispositionMessage"; break;
    case 5694: return "GameActorLocationMessage"; break;
    case 5695: return "GameEntityDispositionErrorMessage"; break;
    case 5696: return "GameEntitiesDispositionMessage"; break;
    case 5697: return "HouseSellRequestMessage"; break;
    case 5698: return "HouseKickRequestMessage"; break;
    case 5699: return "GuildSpellUpgradeRequestMessage"; break;
    case 5700: return "HouseGuildRightsViewMessage"; break;
    case 5701: return "HouseGuildNoneMessage"; break;
    case 5702: return "HouseGuildRightsChangeRequestMessage"; break;
    case 5703: return "HouseGuildRightsMessage"; break;
    case 5704: return "HouseGuildShareRequestMessage"; break;
    case 5705: return "HouseBuyLeaveRequestMessage"; break;
    case 5706: return "GuildCharacsUpgradeRequestMessage"; break;
    case 5707: return "StatedElementMapUpdateMessage"; break;
    case 5708: return "InteractiveElementUpdatedMessage"; break;
    case 5709: return "StatedElementUpdatedMessage"; break;
    case 5710: return "StatedElementsUpdatedMessage"; break;
    case 5711: return "InteractiveElementsUpdatedMessage"; break;
    case 5712: return "GuildHouseTeleportRequestMessage"; break;
    case 5713: return "GuildFarmTeleportRequestMessage"; break;
    case 5714: return "InteractiveStatedElementUpdatedMessage"; break;
    case 5715: return "GuildFightLeaveRequestMessage"; break;
    case 5716: return "StatedMapUpdateMessage"; break;
    case 5717: return "GuildFightJoinRequestMessage"; break;
    case 5718: return "GuildFightPlayersHelpersUpdateMessage"; break;
    case 5719: return "GuildFightPlayersHelpersLeaveMessage"; break;
    case 5720: return "GuildFightPlayersHelpersJoinMessage"; break;
    case 5721: return "GuildInfoTaxCollectorsPlayersEnnemiesAddMessage"; break;
    case 5722: return "GuildInfoTaxCollectorsPlayersEnnemiesRemoveMessage"; break;
    case 5723: return "LivingObjectDissociateMessage"; break;
    case 5724: return "LivingObjectFeedMessage"; break;
    case 5725: return "LivingObjectChangeSkinRequestMessage"; break;
    case 5726: return "OnConnectionEventMessage"; break;
    case 5727: return "GameRolePlayMarriageRequested"; break;
    case 5728: return "GameRolePlayMarriageAnswer"; break;
    case 5729: return "GameRolePlayMarriageAnswerMessage"; break;
    case 5730: return "GameRolePlayMarriageRequestedMessage"; break;
    case 5731: return "GameRolePlayPlayerFightRequestMessage"; break;
    case 5732: return "GameRolePlayPlayerFightFriendlyAnswerMessage"; break;
    case 5733: return "GameRolePlayPlayerFightFriendlyAnsweredMessage"; break;
    case 5734: return "HousePropertiesMessage"; break;
    case 5735: return "HouseBuyResultMessage"; break;
    case 5736: return "PaddockSoldMessage"; break;
    case 5737: return "HouseSoldMessage"; break;
    case 5738: return "HouseBuyRequestMessage"; break;
    case 5739: return "PurchasableDialogMessage"; break;
    case 5740: return "LockableShowCodeDialogMessage"; break;
    case 5741: return "GameActionFightTriggerGlyphTrapMessage"; break;
    case 5742: return "MapRunningFightListRequestMessage"; break;
    case 5743: return "MapRunningFightListMessage"; break;
    case 5744: return "InteractiveUseEndRequestMessage"; break;
    case 5745: return "InteractiveUsedMessage"; break;
    case 5746: return "SpellMovementMessage"; break;
    case 5747: return "JobMultiCraftAvailableSkillsMessage"; break;
    case 5748: return "JobAllowMultiCraftRequestMessage"; break;
    case 5749: return "JobAllowMultiCraftRequestSetMessage"; break;
    case 5750: return "MapRunningFightDetailsRequestMessage"; break;
    case 5751: return "MapRunningFightDetailsMessage"; break;
    case 5752: return "ExchangeTypesItemsExchangerDescriptionForUserMessage"; break;
    case 5753: return "ExchangeRequestOnShopStockMessage"; break;
    case 5754: return "ExchangeShopStockMouvmentRemoveOkMessage"; break;
    case 5755: return "ExchangeBidPriceMessage"; break;
    case 5756: return "ExchangeRequestOnBidHouseMessage"; break;
    case 5757: return "ExchangeLoopMessage"; break;
    case 5758: return "ExchangeNPCRequestMessage"; break;
    case 5759: return "ExchangeBuyOkMessage"; break;
    case 5760: return "ExchangeShopStockMouvmentAddOkMessage"; break;
    case 5761: return "ExchangeStartOkNpcShopMessage"; break;
    case 5762: return "ExchangeGuildTaxCollectorGetMessage"; break;
    case 5763: return "ExchangeStartOkBidBuyerMessage"; break;
    case 5764: return "ExchangeWaitMessage"; break;
    case 5765: return "ExchangeTypesExchangerDescriptionForUserMessage"; break;
    case 5766: return "ExchangeItemObjectAddAsPaymentMessage"; break;
    case 5767: return "ExchangeStartOkHumanVendorMessage"; break;
    case 5768: return "ExchangeOkMultiCraftMessage"; break;
    case 5769: return "ItemNoMoreAvailableMessage"; break;
    case 5770: return "ExchangeItemGoldAddAsPaymentMessage"; break;
    case 5771: return "ExchangeHandleRideStableMessage"; break;
    case 5772: return "ExchangeOnHumanVendorRequestMessage"; break;
    case 5773: return "ExchangePlayerRequestMessage"; break;
    case 5774: return "ExchangeBuyMessage"; break;
    case 5775: return "ExchangeStartAsVendorMessage"; break;
    case 5776: return "ExchangeTooManyVendorHereToBecomeVendorMessage"; break;
    case 5777: return "ExchangeRequestOnRideStockMessage"; break;
    case 5778: return "ExchangeSellMessage"; break;
    case 5779: return "ExchangeRequestOnTaxCollectorMessage"; break;
    case 5780: return "ExchangeStartOkTaxCollectorMessage"; break;
    case 5781: return "ErrorTaxCollectorCloseWarningMessage"; break;
    case 5782: return "ExchangeBasicMemberZoneLimitVendorMessage"; break;
    case 5783: return "ExchangeShowVendorTaxMessage"; break;
    case 5784: return "ExchangePlayerMultiCraftRequestMessage"; break;
    case 5785: return "ExchangeStartOkNpcTradeMessage"; break;
    case 5786: return "ExchangeWaitingResultMessage"; break;
    case 5787: return "ExchangeReplyTaxVendorMessage"; break;
    case 5788: return "ExchangeStartOkBidSellerMessage"; break;
    case 5789: return "ExchangeStartOkShopStockMessage"; break;
    case 5790: return "ExchangeCraftResultMessage"; break;
    case 5791: return "ExchangeStartOkRideStockMessage"; break;
    case 5792: return "ExchangeSellOkMessage"; break;
    case 5793: return "ExchangeWeightMessage"; break;
    case 5794: return "ExchangeCraftInformationObjectMessage"; break;
    case 5795: return "ExchangeStartOkRideMessage"; break;
    case 5796: return "ExchangeRideStableErrorMessage"; break;
    case 5797: return "ExchangeRideStableRemoveMessage"; break;
    case 5798: return "ExchangeRideStableAddMessage"; break;
    case 5799: return "ExchangeRidechildBornMultipleErrorMessage"; break;
    case 5800: return "ExchangeRidetakenFromFarmMessage"; break;
    case 5801: return "ExchangeRideStableBornAddMessage"; break;
    case 5802: return "ExchangeBidSearchOkMessage"; break;
    case 5803: return "ExchangeBidHouseTypeMessage"; break;
    case 5804: return "ExchangeBidHouseBuyMessage"; break;
    case 5805: return "ExchangeBidHousePriceMessage"; break;
    case 5806: return "ExchangeBidHouseSearchMessage"; break;
    case 5807: return "ExchangeBidHouseListMessage"; break;
    case 5808: return "DisplayNumericalValueMessage"; break;
    case 5809: return "JobExperienceMultiUpdateMessage"; break;
    case 5810: return "ExchangeItemAutoCraftStopedMessage"; break;
    case 5811: return "ExchangeReplayMoveKamaMessage"; break;
    case 5812: return "ExchangeReplayStopMoveKamaMessage"; break;
    case 5813: return "ExchangeStartOkCraftMessage"; break;
    case 5814: return "TextItemEnhanceMissMessage"; break;
    case 5815: return "TextItemEnhanceLeveLUnreachableMessage"; break;
    case 5816: return "BasicLatencyStatsRequestMessage"; break;
    case 5817: return "ExchangeStartOkMulticraftCustomerMessage"; break;
    case 5818: return "ExchangeStartOkMulticraftCrafterMessage"; break;
    case 5819: return "ExchangeStartOkJobIndexMessage"; break;
    case 5820: return "GameActionFightInvisibleObstacleMessage"; break;
    case 5821: return "GameActionFightInvisibilityMessage"; break;
    case 5822: return "GameRolePlayFightRequestCanceledMessage"; break;
    case 5823: return "ExchangeStartOkRideWithOutFarmMessage"; break;
    case 5824: return "PaddockPropertiesMessage"; break;
    case 5825: return "GameActionFightSummonMessage"; break;
    case 5826: return "GameActionFightDropCharacterMessage"; break;
    case 5827: return "GameActionFightTemporaryBoostWeaponDamagesMessage"; break;
    case 5828: return "GameActionFightDodgePointLossMessage"; break;
    case 5829: return "GameActionFightThrowCharacterMessage"; break;
    case 5830: return "GameActionFightCarryCharacterMessage"; break;
    case 5831: return "ExchangeItemPaymentForCraftMessage"; break;
    case 5832: return "ExchangeModifiedPaymentForCraftMessage"; break;
    case 5833: return "ExchangeGoldPaymentForCraftMessage"; break;
    case 5834: return "SpellForgottenMessage"; break;
    case 5835: return "GuildMembershipMessage"; break;
    case 5836: return "CharacterSelectedErrorMessage"; break;
    case 5837: return "AlignementRankUpdateMessage"; break;
    case 5838: return "PrismWorldJoinLeaveRequestMessage"; break;
    case 5839: return "PrismBalanceRequestMessage"; break;
    case 5840: return "PrismCurrentBonusRequestMessage"; break;
    case 5841: return "PrismBalanceResultMessage"; break;
    case 5842: return "PrismAlignmentBonusResultMessage"; break;
    case 5843: return "PrismFightJoinLeaveRequestMessage"; break;
    case 5844: return "PrismInfoJoinLeaveRequestMessage"; break;
    case 5845: return "PrismFightSwitchRequestMessage"; break;
    case 5846: return "PrismPlayerSwitchMovementMessage"; break;
    case 5847: return "PrismPlayerStateMessage"; break;
    case 5848: return "PrismPlayerRemoveMovementMessage"; break;
    case 5849: return "PrismPlayerAddMovementMessage"; break;
    case 5850: return "PrismAttackedMessage"; break;
    case 5851: return "PrismPlayerEnnemiesAddMessage"; break;
    case 5852: return "PrismPlayerEnnemyRemoveMessage"; break;
    case 5853: return "PrismInfoCloseMessage"; break;
    case 5854: return "PrismWorldInformationMessage"; break;
    case 5855: return "PrismFightJoinFailedMessage"; break;
    case 5856: return "ChallengeFightJoinFailedMessage"; break;
    case 5857: return "ChallengeFightJoinResultMessage"; break;
    case 5858: return "PrismInfoValidMessage"; break;
    case 5859: return "PrismInfoInValidMessage"; break;
    case 5860: return "HouseEnteredMessage"; break;
    case 5861: return "HouseExitedMessage"; break;
    case 5862: return "SubwayTeleportRequestMessage"; break;
    case 5863: return "PrismTeleportRequestMessage"; break;
    case 5864: return "GameFightShowFighterMessage"; break;
    case 5865: return "RideEnuqMessage"; break;
    case 5866: return "RideRenameMessage"; break;
    case 5867: return "RideDataMessage"; break;
    case 5868: return "RideXpRationMessage"; break;
    case 5869: return "RideInformationRequestMessage"; break;
    case 5870: return "RideFreeRideRequestMessage"; break;
    case 5871: return "RideRenameRideRequestMessage"; break;
    case 5872: return "RideEnuqRideRequestMessage"; break;
    case 5873: return "RideRideRequestMessage"; break;
    case 5874: return "RideSellFarmRequestMessage"; break;
    case 5875: return "RideCloseTransactionWindowRequestMessage"; break;
    case 5876: return "RideBuyFarmRequestMessage"; break;
    case 5877: return "RideXpRatioRequestMessage"; break;
    case 5878: return "RideRemoveFarmItemRequestMessage"; break;
    case 5879: return "RideInformationInFarmRequestMessage"; break;
    case 5880: return "RideUnSetMessage"; break;
    case 5881: return "RideSetMessage"; break;
    case 5882: return "RideEquipedErrorMessage"; break;
    case 5883: return "RideRidingMessage"; break;
    case 5884: return "HouseSellFromInsideRequestMessage"; break;
    case 5885: return "HouseLockFromInsideRequestMessage"; break;
    case 5886: return "RideXpRatioMessage"; break;
    case 5887: return "GuildKickRequestMessage"; break;
    case 5888: return "GuildFightPlayersEnnemiesListMessage"; break;
    case 5889: return "GuildFightPlayersEnnemyRemoveMessage"; break;
    case 5890: return "PrismFightDefendersSwitchMessage"; break;
    case 5891: return "ExchangeShopStockMovementAddOkMessage"; break;
    case 5892: return "PrismFightDefenderLeaveMessage"; break;
    case 5893: return "PrismFightAttackerAddMessage"; break;
    case 5894: return "PrismFightAttackedMessage"; break;
    case 5895: return "PrismFightDefenderAddMessage"; break;
    case 5896: return "ExchangeShopStockMovementRemoveOkMessage"; break;
    case 5897: return "PrismFightAttackerRemoveMessage"; break;
    case 5898: return "NpcGenericActionRequestMessage"; break;
    case 5899: return "PrismFightDefendersStateMessage"; break;
    case 5900: return "NpcGenericActionFailureMessage"; break;
    case 5901: return "PrismFightSwapRequestMessage"; break;
    case 5902: return "PrismFightDefendersSwapMessage"; break;
    case 5903: return "ExchangeStartedRideStockMessage"; break;
    case 5904: return "ExchangeStartedBidBuyerMessage"; break;
    case 5905: return "ExchangeStartedBidSellerMessage"; break;
    case 5906: return "ExchangeShopStockMovementAddedMessage"; break;
    case 5907: return "ExchangeShopStockMovementRemovedMessage"; break;
    case 5908: return "ChallengeFightJoinRefusedMessage"; break;
    case 5909: return "ExchangeShopStockMovementUpdatedMessage"; break;
    case 5910: return "ExchangeShopStockStartedMessage"; break;
    case 5911: return "RideEmoteIconUsedOkMessage"; break;
    case 5912: return "TaxCollectorMovementAdd"; break;
    case 5913: return "GameDataFarmObjectAddMessage"; break;
    case 5914: return "GameDataFarmObjectRemoveMessage"; break;
    case 5915: return "TaxCollectorMovementRemoveMessage"; break;
    case 5916: return "TaxCollectorListMovementAddMessage"; break;
    case 5917: return "TaxCollectorMovementAddMessage"; break;
    case 5918: return "TaxCollectorAttackedMessage"; break;
    case 5919: return "GuildHousesInformationMessage"; break;
    case 5920: return "GuildCreationStartedMessage"; break;
    case 5921: return "GameFightSynchronizeMessage"; break;
    case 5922: return "GameFightSynchronizeRequestMessage"; break;
    case 5923: return "GuildMemberLeavingMessage"; break;
    case 5924: return "FriendUpdateMessage"; break;
    case 5925: return "ObjectGroundListAddedMessage"; break;
    case 5926: return "GameDataFarmObjectListAddMessage"; break;
    case 5927: return "GameFightOptionStateUpdateMessage"; break;
    case 5928: return "GuildFightPlayersEnemiesListMessage"; break;
    case 5929: return "GuildFightPlayersEnemyRemoveMessage"; break;
    case 5930: return "TaxCollectorListMessage"; break;
    case 5931: return "FriendsListWithSpouseMessage"; break;
    case 5932: return "ContactLookRequestMessage"; break;
    case 5933: return "ContactLookRequestByNameMessage"; break;
    case 5934: return "ContactLookMessage"; break;
    case 5935: return "ContactLookRequestByIdMessage"; break;
    case 5936: return "GuildInformationsFarmsMessage"; break;
    case 5937: return "GameRolePlayPlayerFightFriendlyRequestedMessage"; break;
    case 5938: return "GuildFarmRemoneMessage"; break;
    case 5939: return "GuildFarmBoughtMessage"; break;
    case 5940: return "GuildFarmRemoveMessage"; break;
    case 5941: return "ExchangeStartOkCraftWithInformationMessage"; break;
    case 5942: return "AlignementSubAreasListMessage"; break;
    case 5943: return "AlignementAreaUpdateMessage"; break;
    case 5944: return "ObjectGroundRemovedMultipleMessage"; break;
    case 5945: return "ExchangeBidHouseItemAddOkMessage"; break;
    case 5946: return "ExchangeBidHouseItemRemoveOkMessage"; break;
    case 5947: return "ExchangeBidHouseGenericItemAddedMessage"; break;
    case 5948: return "ExchangeBidHouseGenericItemRemovedMessage"; break;
    case 5949: return "ExchangeBidHouseInListAddedMessage"; break;
    case 5950: return "ExchangeBidHouseInListRemovedMessage"; break;
    case 5951: return "PaddockBuyRequestMessage"; break;
    case 5952: return "GuildPaddockBoughtMessage"; break;
    case 5953: return "PaddockSellRequestMessage"; break;
    case 5954: return "GameRolePlayTaxCollectorFightRequestMessage"; break;
    case 5955: return "GuildPaddockRemovedMessage"; break;
    case 5956: return "AtlasPointInformationsMessage"; break;
    case 5957: return "GuildPaddockTeleportRequestMessage"; break;
    case 5958: return "PaddockRemoveItemRequestMessage"; break;
    case 5959: return "GuildInformationsPaddocksMessage"; break;
    case 5960: return "TeleportDestinationsListMessage"; break;
    case 5961: return "TeleportRequestMessage"; break;
    case 5962: return "MountSterilizeRequestMessage"; break;
    case 5963: return "MountEquipedErrorMessage"; break;
    case 5964: return "ExchangeMountStableRemoveMessage"; break;
    case 5965: return "ExchangeHandleMountStableMessage"; break;
    case 5966: return "ExchangeMountStableBornAddMessage"; break;
    case 5967: return "MountRidingMessage"; break;
    case 5968: return "MountSetMessage"; break;
    case 5969: return "ExchangeStartOkMountWithOutFarmMessage"; break;
    case 5970: return "MountXpRatioMessage"; break;
    case 5971: return "ExchangeMountStableAddMessage"; break;
    case 5972: return "MountInformationRequestMessage"; break;
    case 5973: return "MountDataMessage"; break;
    case 5974: return "ExchangeMountchildBornMultipleErrorMessage"; break;
    case 5975: return "MountInformationInPaddockRequestMessage"; break;
    case 5976: return "MountToggleRidingRequestMessage"; break;
    case 5977: return "MountSterilizedMessage"; break;
    case 5978: return "MountEmoteIconUsedOkMessage"; break;
    case 5979: return "ExchangeStartOkMountMessage"; break;
    case 5980: return "MountReleaseRequestMessage"; break;
    case 5981: return "ExchangeMountStableErrorMessage"; break;
    case 5982: return "MountUnSetMessage"; break;
    case 5983: return "MountRenamedMessage"; break;
    case 5984: return "ExchangeStartedMountStockMessage"; break;
    case 5985: return "PrismWorldInformationRequestMessage"; break;
    case 5986: return "ExchangeRequestOnMountStockMessage"; break;
    case 5987: return "MountRenameRequestMessage"; break;
    case 5988: return "ExchangeMountTakenFromFarmMessage"; break;
    case 5989: return "MountSetXpRatioRequestMessage"; break;
    case 5990: return "GameDataPaddockObjectAddMessage"; break;
    case 5991: return "ExchangeStartOkMountWithOutPaddockMessage"; break;
    case 5992: return "GameDataPaddockObjectListAddMessage"; break;
    case 5993: return "GameDataPaddockObjectRemoveMessage"; break;
    case 5994: return "ExchangeMountTakenFromPaddockMessage"; break;
    case 5995: return "ExchangeMountChildBornMultipleErrorMessage"; break;
    case 5996: return "GameRolePlayPlayerLifeStatusMessage"; break;
    case 5997: return "AbstractGameActionFightDispellableEffectMessage"; break;
    case 5998: return "GameActionFightTriggeredEffectMessage"; break;
    case 5999: return "ExchangeCraftResultWithObjectDescMessage"; break;
    case 6000: return "ExchangeCraftResultWithObjectIdMessage"; break;
    case 6001: return "ExchangeReplayStopMessage"; break;
    case 6002: return "ExchangeReplayMessage"; break;
    case 6003: return "GameModeMessage"; break;
    case 6004: return "ExchangeObjectUseInWorkshopMessage"; break;
    case 6005: return "ExchangeObjectRemovedFromWorkshopMessage"; break;
    case 6006: return "ExchangeObjectModifiedInWorkshopMessage"; break;
    case 6007: return "ExchangeObjectPutInWorkshopMessage"; break;
    case 6008: return "ExchangeObjectModifiedInBagMessage"; break;
    case 6009: return "ExchangeObjectPutInBagMessage"; break;
    case 6010: return "ExchangeObjectRemovedFromBagMessage"; break;
    case 6011: return "SpellItemBoostMessage"; break;
    case 6012: return "PauseDialogMessage"; break;
    case 6013: return "CompassUpdatePvpSeekMessage"; break;
    case 6014: return "ObjectJobAddedMessage"; break;
    case 6015: return "ExchangeItemAutoCraftRemainingMessage"; break;
    case 6016: return "JobListedUpdateMessage"; break;
    case 6017: return "ObjectFoundWhileRecoltingMessage"; break;
    case 6018: return "PaddockSellBuyDialogMessage"; break;
    case 6019: return "ChallengeResultMessage"; break;
    case 6020: return "ExchangeMultiCraftCrafterCanUseHisRessourcesMessage"; break;
    case 6021: return "ExchangeMultiCraftSetCrafterCanUseHisRessourcesMessage"; break;
    case 6022: return "ChallengeInfoMessage"; break;
    case 6023: return "ExchangeReplayCountModifiedMessage"; break;
    case 6024: return "GameContextCreateErrorMessage"; break;
    case 6025: return "AlignementSubAreaUpdateMessage"; break;
    case 6026: return "GameDataPlayFarmObjectAnimationMessage"; break;
    case 6027: return "SpamMessage"; break;
    case 6028: return "DebugInClientMessage"; break;
    case 6029: return "AccountLoggingKickedMessage"; break;
    case 6030: return "GoldAddedMessage"; break;
    case 6031: return "ExchangeRemovedPaymentForCraftMessage"; break;
    case 6032: return "ExchangeObjectTransfertAllToInvMessage"; break;
    case 6033: return "ObjectsAddedMessage"; break;
    case 6034: return "ObjectsDeletedMessage"; break;
    case 6035: return "StorageObjectsRemoveMessage"; break;
    case 6036: return "StorageObjectsUpdateMessage"; break;
    case 6037: return "ExchangeShopStockMultiMovementRemovedMessage"; break;
    case 6038: return "ExchangeShopStockMultiMovementUpdatedMessage"; break;
    case 6039: return "ExchangeObjectTransfertListToInvMessage"; break;
    case 6040: return "PrismFightStateUpdateMessage"; break;
    case 6041: return "PrismUseRequestMessage"; break;
    case 6042: return "PrismAttackRequestMessage"; break;
    case 6043: return "JobCrafterDirectoryEntryRequestMessage"; break;
    case 6044: return "JobCrafterDirectoryEntryMessage"; break;
    case 6045: return "ContactLookErrorMessage"; break;
    case 6046: return "JobCrafterDirectoryListMessage"; break;
    case 6047: return "JobCrafterDirectoryListRequestMessage"; break;
    case 6048: return "TeleportOnSameMapMessage"; break;
    case 6049: return "ExchangeMountPaddockAddMessage"; break;
    case 6050: return "ExchangeMountPaddockRemoveMessage"; break;
    case 6051: return "MapObstacleUpdateMessage"; break;
    case 6052: return "PaddockMoveItemRequestMessage"; break;
    case 6053: return "CinematicMessage"; break;
    case 6054: return "PartyUpdateLightMessage"; break;
    case 6055: return "ExchangeMountFreeFromPaddockMessage"; break;
    case 6056: return "ExchangeMountSterilizeFromPaddockMessage"; break;
    case 6057: return "AlignmentSubAreaUpdateMessage"; break;
    case 6058: return "AlignmentRankUpdateMessage"; break;
    case 6059: return "AlignmentSubAreasListMessage"; break;
    case 6060: return "AlignmentAreaUpdateMessage"; break;
    case 6061: return "GuildMemberOnlineStatusMessage"; break;
    case 6062: return "GuildLevelUpMessage"; break;
    case 6063: return "GameFightTurnListWithDeadsMessage"; break;
    case 6064: return "GameActionFightTemporarySpellBoostMessage"; break;
    case 6065: return "LivingObjectMessageMessage"; break;
    case 6066: return "LivingObjectMessageRequestMessage"; break;
    case 6067: return "GameFightResumeMessage"; break;
    case 6068: return "CharacterSelectedForceMessage"; break;
    case 6069: return "GameFightSpectateMessage"; break;
    case 6070: return "GameActionFightDispellableEffectMessage"; break;
    case 6071: return "GameContextReadyMessage"; break;
    case 6072: return "CharacterSelectedForceReadyMessage"; break;
    case 6073: return "GameRolePlayAggressionMessage"; break;
    case 6074: return "CharactersListWithRecolorMessage"; break;
    case 6075: return "CharacterSelectionWithRecolorMessage"; break;
    case 6076: return "CharacterLevelUpInformationMessage"; break;
    case 6077: return "FriendSetWarnOnLevelGainMessage"; break;
    case 6078: return "FriendWarnOnLevelGainStateMessage"; break;
    case 6079: return "CharacterReportMessage"; break;
    case 6080: return "PartyAbdicateThroneMessage"; break;
    case 6081: return "GameContextKickMessage"; break;
    case 6082: return "EntityArtworkMessage"; break;
    case 6083: return "UpdateNotificationFlagsMessage"; break;
    case 6084: return "CharacterFirstSelectionMessage"; break;
    case 6085: return "QuestObjectiveValidationMessage"; break;
    case 6086: return "ResetNotificationMessage"; break;
    case 6087: return "NotificationListMessage"; break;
    case 6088: return "GuidedModeReturnRequestMessage"; break;
    case 6089: return "NotificationResetMessage"; break;
    case 6090: return "NotificationUpdateFlagMessage"; break;
    case 6091: return "QuestStartedMessage"; break;
    case 6092: return "GuidedModeQuitRequestMessage"; break;
    case 6093: return "QuestUpdatedMessage"; break;
    case 6094: return "GuidedModeQuitResultMessage"; break;
    case 6095: return "GuidedModeReturnResultMessage"; break;
    case 6096: return "QuestStepStartedMessage"; break;
    case 6097: return "QuestValidatedMessage"; break;
    case 6098: return "QuestObjectiveValidatedMessage"; break;
    case 6099: return "QuestStepValidatedMessage"; break;
    case 6100: return "QueueStatusMessage"; break;
    case 6101: return "BasicSwitchModeRequestMessage"; break;
    case 6102: return "IdentificationMessageWithServerId"; break;
    case 6103: return "NotificationByServerMessage"; break;
    case 6104: return "IdentificationMessageWithServerIdMessage"; break;
    case 6105: return "CharacterGetMarriedMessage"; break;
    case 6106: return "CharacterGetMarriedAcceptMessage"; break;
    case 6107: return "GameRolePlayMarriageAskToWifeMessage"; break;
    case 6108: return "GameRolePlayMarriageResultMessage"; break;
    case 6109: return "GameRolePlayMarriageAskToHusbandMessage"; break;
    case 6110: return "EntityTalkMessage"; break;
    case 6111: return "CharacterReplayWithRecolorRequestMessage"; break;
    case 6112: return "InteractiveUseEndedMessage"; break;
    case 6113: return "GameActionFightDispellEffectMessage"; break;
    case 6114: return "GameRolePlaySpellAnimMessage"; break;
    case 6115: return "GuildInvitationByNameMessage"; break;
    case 6116: return "GameActionFightCloseCombatMessage"; break;
    case 6117: return "AbstractGameActionFightTargetedMessage"; break;
    case 6118: return "AbstractGameActionFightTargetedAbilityMessage"; break;
    case 6119: return "IdentificationAccountForceMessage"; break;
    case 6120: return "CharactersListWithModificationsMessage"; break;
    case 6121: return "CharacterSelectionWithRenameMessage"; break;
    case 6122: return "CharacterReplayWithRenameRequestMessage"; break;
    case 6123: return "ChallengeTargetUpdateMessage"; break;
    case 6124: return "StopToListenRunningFightRequestMessage"; break;
    case 6125: return "ExchangeCraftSlotCountIncreasedMessage"; break;
    case 6126: return "ConsoleCommandsList"; break;
    case 6127: return "ConsoleCommandsListMessage"; break;
    case 6128: return "MapComplementaryInformationsDataMessageInHouse"; break;
    case 6129: return "ExchangeStartedWithPodsMessage"; break;
    case 6130: return "MapComplementaryInformationsDataInHouseMessage"; break;
    case 6131: return "GameActionFightNoSpellCast"; break;
    case 6132: return "GameActionFightNoSpellCastMessage"; break;
    case 6133: return "IdentificationAccountForceWithServerIdMessage"; break;
    case 6134: return "PopupWarningMessage"; break;
    case 6135: return "ChatAdminServerMessage"; break;
    case 6136: return "PaddockFilterMessage"; break;
    case 6137: return "HouseToSellFilterMessage"; break;
    case 6138: return "PaddockToSellListMessage"; break;
    case 6139: return "HouseToSellListRequestMessage"; break;
    case 6140: return "HouseToSellListMessage"; break;
    case 6141: return "PaddockToSellListRequestMessage"; break;
    case 6142: return "AcquaintanceServerListMessage"; break;
    case 6143: return "AcquaintanceSearchErrorMessage"; break;
    case 6144: return "AcquaintanceSearchMessage"; break;
    case 6145: return "ExchangeClearPaymentForCraftMessage"; break;
    case 6146: return "NpcGenericActionRequestWithParamMessage"; break;
    case 6147: return "GameActionFightTriggerEffectMessage"; break;
    case 6148: return "GameRolePlayDelayedActionCancelMessage"; break;
    case 6149: return "DungeonLeftMessage"; break;
    case 6150: return "GameRolePlayDelayedActionFinishedMessage"; break;
    case 6151: return "ChallengeDungeonStackedBonusMessage"; break;
    case 6152: return "DungeonEnteredMessage"; break;
    case 6153: return "GameRolePlayDelayedActionMessage"; break;
    case 6154: return "CheckFileRequestMessage"; break;
    case 6155: return "GameMapChangeOrientationsMessage"; break;
    case 6156: return "CheckFileMessage"; break;
    case 6157: return "GameRolePlayExitRequest"; break;
    case 6158: return "ShowCellSpectatorMessage"; break;
    case 6159: return "GuildMemberSetWarnOnConnectionMessage"; break;
    case 6160: return "GuildMemberWarnOnConnectionStateMessage"; break;
    case 6161: return "PaddockToSellFilterMessage"; break;
    case 6162: return "InventoryContentAndPresetMessage"; break;
    case 6163: return "InventoryPresetUseResultMessage"; break;
    case 6164: return "InventoryPresetItemRelinkMessage"; break;
    case 6165: return "InventoryPresetSaveMessage"; break;
    case 6166: return "InventoryPresetItemRelinkErrorMessage"; break;
    case 6167: return "InventoryPresetUseMessage"; break;
    case 6168: return "InventoryPresetItemUpdateMessage"; break;
    case 6169: return "InventoryPresetDeleteMessage"; break;
    case 6170: return "InventoryPresetSaveResultMessage"; break;
    case 6171: return "InventoryPresetUpdateMessage"; break;
    case 6172: return "MountDataErrorMessage"; break;
    case 6173: return "InventoryPresetDeleteResultMessage"; break;
    case 6174: return "IdentificationFailedBannedMessage"; break;
    case 6175: return "PartyRestrictedMessage"; break;
    case 6176: return "GameActionFightDispellSpellMessage"; break;
    case 6177: return "GameRolePlayExitRequestMessage"; break;
    case 6178: return "IdentificationWithTicketMessage"; break;
    case 6179: return "UpdateMountBoostMessage"; break;
    case 6180: return "GuildHouseRemoveMessage"; break;
    case 6181: return "GuildHouseUpdateInformationMessage"; break;
    case 6182: return "IdentificationWithRSACryptedPasswordMessage"; break;
    case 6183: return "ExchangeObjectTransfertListFromInvMessage"; break;
    case 6184: return "ExchangeObjectTransfertAllFromInvMessage"; break;
    case 6185: return "LocalizedChatSmileyMessage"; break;
    case 6186: return "PackRestrictedSubAreaMessage"; break;
    case 6187: return "PartsListInformationMessage"; break;
    case 6188: return "ExchangeCraftResultMagicWithObjectDescMessage"; break;
    case 6189: return "MountFeedRequestMessage"; break;
    case 6190: return "AuthenticationTicketWithClientPacksMessage"; break;
    case 6191: return "GameRolePlayAttackMonsterRequestMessage"; break;
    case 6192: return "MoodSmileyRequestMessage"; break;
    case 6193: return "TicketRenewalRequestMessage"; break;
    case 6194: return "IdentificationWithServerIdMessage"; break;
    case 6195: return "TicketRenewalMessage"; break;
    case 6196: return "MoodSmileyResultMessage"; break;
    case 6197: return "ErrorMapNotFoundMessage"; break;
    case 6198: return "TicketRenewalRefusedMessage"; break;
    case 6199: return "IdentificationWithTicketAndServerIdMessage"; break;
    case 6200: return "IdentificationWithLoginTokenAndServerIdMessage"; break;
    case 6201: return "IdentificationWithLoginTokenMessage"; break;
    case 6202: return "LoginTokenRenewalRequestMessage"; break;
    case 6203: return "LoginTokenRenewalRefusedMessage"; break;
    case 6204: return "LoginTokenRenewalMessage"; break;
    case 6205: return "AchievementListMessage"; break;
    case 6206: return "ObjectsQuantityMessage"; break;
    case 6207: return "AchievementUpdateMessage"; break;
    case 6208: return "AchievementFinishedMessage"; break;
    case 6209: return "IdentificationSuccessWithLoginTokenMessage"; break;
    case 6210: return "InventoryPresetItemUpdateRequestMessage"; break;
    case 6211: return "InventoryPresetItemUpdateErrorMessage"; break;
    case 6212: return "SpellListSlaveMessage"; break;
    case 6213: return "GameFightTurnStartSlaveMessage"; break;
    case 6214: return "SlaveSwitchContextMessage"; break;
    case 6215: return "GameFightResumeWithSlavesMessage"; break;
    case 6216: return "AccountCapabilitiesMessage"; break;
    case 6217: return "GameActionFightVanishMessage"; break;
    case 6218: return "GameFightShowFighterRandomStaticPoseMessage"; break;
    case 6219: return "GameActionFightSpellCooldownVariationMessage"; break;
    case 6220: return "GameActionFightShieldPointsVariationMessage"; break;
    case 6221: return "GameActionFightSpellImmunityMessage"; break;
    case 6222: return "ShortcutBarRemoveErrorMessage"; break;
    case 6223: return "ShortcutBarUseErrorMessage"; break;
    case 6224: return "ShortcutBarRemovedMessage"; break;
    case 6225: return "ShortcutBarAddRequestMessage"; break;
    case 6226: return "ShortcutBarSwapErrorMessage"; break;
    case 6227: return "ShortcutBarAddErrorMessage"; break;
    case 6228: return "ShortcutBarRemoveRequestMessage"; break;
    case 6229: return "ShortcutBarRefreshMessage"; break;
    case 6230: return "ShortcutBarSwapRequestMessage"; break;
    case 6231: return "ShortcutBarContentMessage"; break;
    case 6232: return "ShortcutBarUseRequestMessage"; break;
    case 6233: return "GameActionFightInvisibleTacklerMessage"; break;
    case 6234: return "ObjectUseMultipleMessage"; break;
    case 6235: return "GuildFightTakePlaceRequestMessage"; break;
    case 6236: return "ExchangeStartedWithStorageMessage"; break;
    case 6237: return "ServerExperienceModificatorMessage"; break;
    case 6238: return "ExchangeObjectModifyPricedMessage"; break;
    case 6239: return "GameFightNewRoundMessage"; break;
    case 6240: return "DungeonPartyFinderAvailableDungeonsRequestMessage"; break;
    case 6241: return "DungeonPartyFinderRegisterSuccessMessage"; break;
    case 6242: return "DungeonPartyFinderAvailableDungeonsMessage"; break;
    case 6243: return "DungeonPartyFinderRegisterErrorMessage"; break;
    case 6244: return "PartyInvitationDungeonMessage"; break;
    case 6245: return "PartyInvitationDungeonRequestMessage"; break;
    case 6246: return "DungeonPartyFinderListenRequestMessage"; break;
    case 6247: return "DungeonPartyFinderRoomContentMessage"; break;
    case 6248: return "DungeonPartyFinderListenErrorMessage"; break;
    case 6249: return "DungeonPartyFinderRegisterRequestMessage"; break;
    case 6250: return "DungeonPartyFinderRoomContentUpdateMessage"; break;
    case 6251: return "PartyCancelInvitationNotificationMessage"; break;
    case 6252: return "PartyMemberEjectedMessage"; break;
    case 6253: return "RawDataMessage"; break;
    case 6254: return "PartyCancelInvitationMessage"; break;
    case 6255: return "GameRolePlayPVPArenaFightAnsweredMessage"; break;
    case 6256: return "PartyInvitationCancelledForGuestMessage"; break;
    case 6257: return "GameRolePlayPVPArenaFightRegistrationMessage"; break;
    case 6258: return "GameRolePlayPVPArenaFightRequestedMessage"; break;
    case 6259: return "GameRolePlayPVPArenaFightAnswerMessage"; break;
    case 6260: return "PartyNewGuestMessage"; break;
    case 6261: return "PartyDeletedMessage"; break;
    case 6262: return "PartyInvitationDungeonDetailsMessage"; break;
    case 6263: return "PartyInvitationDetailsMessage"; break;
    case 6264: return "PartyInvitationDetailsRequestMessage"; break;
    case 6265: return "SpouseStatusMessage"; break;
    case 6266: return "URLOpenMessage"; break;
    case 6267: return "TrustStatusMessage"; break;
    case 6268: return "MapComplementaryInformationsWithCoordsMessage"; break;
    case 6269: return "PartyPledgeLoyaltyRequestMessage"; break;
    case 6270: return "PartyLoyaltyStatusMessage"; break;
    case 6271: return "ExchangeObjectTransfertTypeFromInvMessage"; break;
    case 6272: return "ExchangeBidHouseBuyResultMessage"; break;
    case 6273: return "AbstractPartyEventMessage"; break;
    case 6274: return "AbstractPartyMessage"; break;
    case 6275: return "MailStatusMessage"; break;
    case 6276: return "GameRolePlayArenaFightPropositionMessage"; break;
    case 6277: return "PartyModifiableStatusMessage"; break;
    case 6278: return "GameRolePlayArenaFightRefusedMessage"; break;
    case 6279: return "GameRolePlayArenaFightAnswerMessage"; break;
    case 6280: return "GameRolePlayArenaRegisterMessage"; break;
    case 6281: return "GameRolePlayArenaFighterStatusMessage"; break;
    case 6282: return "GameRolePlayArenaUnregisterMessage"; break;
    case 6283: return "PartyInvitationArenaRequestMessage"; break;
    case 6284: return "GameRolePlayArenaRegistrationStatusMessage"; break;
    case 6285: return "TeleportToBuddyRequestMessage"; break;
    case 6286: return "TeleportBuddiesAcceptMessage"; break;
    case 6287: return "TeleportToBuddyOfferMessage"; break;
    case 6288: return "TeleportBuddiesRefuseMessage"; break;
    case 6289: return "TeleportBuddiesMessage"; break;
    case 6290: return "ObjectFeedMessage"; break;
    case 6291: return "TeleportToBuddyCanceledMessage"; break;
    case 6292: return "NewMailMessage"; break;
    case 6293: return "TeleportToBuddyAnswerMessage"; break;
    case 6294: return "TeleportBuddiesAnswerMessage"; break;
    case 6295: return "GameRolePlayArenaUpdateRankMessage"; break;
    case 6296: return "DungeonKeyRingUpdateMessage"; break;
    case 6297: return "NumericWhoIsMessage"; break;
    case 6298: return "NumericWhoIsRequestMessage"; break;
    case 6299: return "DungeonKeyRingMessage"; break;
    case 6300: return "CharacterSelectedErrorMissingMapPackMessage"; break;
    case 6301: return "GameRolePlayArenaUpdatePlayerInfosMessage"; break;
    case 6302: return "TeleportBuddiesRequestedMessage"; break;
    case 6303: return "TeleportToBuddyCloseMessage"; break;
    case 6304: return "GameActionFightModifyEffectsDurationMessage"; break;
    case 6305: return "ServerOptionalFeaturesMessage"; break;
    case 6306: return "PartyNewMemberMessage"; break;
    case 6307: return "GameFightTurnResumeMessage"; break;
    case 6308: return "MountReleasedMessage"; break;
    case 6309: return "GameFightRefreshFighterMessage"; break;
    case 6310: return "GameActionFightLifeAndShieldPointsLostMessage"; break;
    case 6311: return "GameActionFightLifePointsGainMessage"; break;
    case 6312: return "GameActionFightLifePointsLostMessage"; break;
    case 6313: return "PreLoginQueueStatusMessage"; break;
    case 6314: return "CredentialsAcknowledgementMessage"; break;
    case 6315: return "AccountHouseMessage"; break;
    case 6316: return "SequenceNumberRequestMessage"; break;
    case 6317: return "SequenceNumberMessage"; break;
    case 6318: return "PrismSubAreaUpdateMessage"; break;
    case 6319: return "AlignmentSubAreaUpdateExtendedMessage"; break;
    case 6320: return "GameActionFightInvisibleDetectedMessage"; break;
    case 6321: return "CharacterExperienceGainMessage"; break;
    case 6322: return "FighterStatsListMessage"; break;
    case 6323: return "GuildModificationValidMessage"; break;
    case 6324: return "GuildModificationStartedMessage"; break;
    case 6325: return "ExchangeObjectTransfertExistingFromInvMessage"; break;
    case 6326: return "ExchangeObjectTransfertExistingToInvMessage"; break;
    case 6327: return "GuildModificationNameValidMessage"; break;
    case 6328: return "GuildModificationEmblemValidMessage"; break;
    case 6329: return "InventoryPresetSaveCustomMessage"; break;
    case 6330: return "GameActionFightCastOnTargetRequestMessage"; break;
    case 6331: return "BidHouseGetAveragePricesMessage"; break;
    case 6332: return "BidHouseAveragePricesMessage"; break;
    case 6333: return "BidHouseAveragePricesErrorMessage"; break;
    case 6334: return "ObjectAveragePricesGetMessage"; break;
    case 6335: return "ObjectAveragePricesMessage"; break;
    case 6336: return "ObjectAveragePricesErrorMessage"; break;
    case 6337: return "ExchangeBidHouseInListUpdatedMessage"; break;
    case 6338: return "ServerSettings"; break;
    case 6339: return "CharacterCapabilitiesMessage"; break;
    case 6340: return "ServerSettingsMessage"; break;
    case 6341: return "AlmanachCalendarDateMessage"; break;
    case 6342: return "PartyMemberInFightMessage"; break;
    case 6343: return "KrosmasterInventoryErrorMessage"; break;
    case 6344: return "KrosmasterInventoryRequestMessage"; break;
    case 6345: return "KrosmasterAuthTokenErrorMessage"; break;
    case 6346: return "KrosmasterAuthTokenRequestMessage"; break;
    case 6347: return "KrosmasterPlayingStatusMessage"; break;
    case 6348: return "KrosmasterTransferMessage"; break;
    case 6349: return "KrosmasterTransferRequestMessage"; break;
    case 6350: return "KrosmasterInventoryMessage"; break;
    case 6351: return "KrosmasterAuthTokenMessage"; break;
    case 6352: return "DisplayNumericalValueMessageWithAgeBonus"; break;
    case 6353: return "CharacterSelectionWithRelookMessage"; break;
    case 6354: return "CharacterReplayWithRelookRequestMessage"; break;
    case 6355: return "SpouseGetInformationsMessage"; break;
    case 6356: return "SpouseInformationsMessage"; break;
    case 6357: return "AchievementDetailedListRequestMessage"; break;
    case 6358: return "AchievementDetailedListMessage"; break;
    case 6359: return "AchievementListRequestMessage"; break;
    case 6360: return "GuildMemberConnectionMessage"; break;
    case 6361: return "DisplayNumericalValueWithAgeBonusMessage"; break;
    case 6362: return "BasicAckMessage"; break;
    case 6363: return "TitlesAndOrnamentsListRequestMessage"; break;
    case 6364: return "TitleGainedMessage"; break;
    case 6365: return "TitleSelectRequestMessage"; break;
    case 6366: return "TitleSelectedMessage"; break;
    case 6367: return "TitlesAndOrnamentsListMessage"; break;
    case 6368: return "OrnamentGainedMessage"; break;
    case 6369: return "OrnamentSelectedMessage"; break;
    case 6370: return "OrnamentSelectErrorMessage"; break;
    case 6371: return "TitleLostMessage"; break;
    case 6372: return "CheckIntegrityMessage"; break;
    case 6373: return "TitleSelectErrorMessage"; break;
    case 6374: return "OrnamentSelectRequestMessage"; break;
    case 6375: return "AchievementRewardErrorMessage"; break;
    case 6376: return "AchievementRewardSuccessMessage"; break;
    case 6377: return "AchievementRewardRequestMessage"; break;
    case 6378: return "AchievementDetailsMessage"; break;
    case 6379: return "AchievementDetailsRequest"; break;
    case 6380: return "AchievementDetailsRequestMessage"; break;
    case 6381: return "AchievementFinishedInformationMessage"; break;
    case 6382: return "FriendGuildSetWarnOnAchievementCompleteMessage"; break;
    case 6383: return "FriendGuildWarnOnAchievementCompleteStateMessage"; break;
    case 6384: return "InteractiveUseErrorMessage"; break;
    case 6385: return "PlayerStatusUpdateErrorMessage"; break;
    case 6386: return "PlayerStatusUpdateMessage"; break;
    case 6387: return "PlayerStatusUpdateRequestMessage"; break;
    case 6388: return "MoodSmileyUpdateMessage"; break;
    case 6389: return "ExchangeSetCraftRecipeMessage"; break;
    case 6390: return "AllianceMembershipMessage"; break;
    case 6391: return "AllianceCreationResultMessage"; break;
    case 6392: return "AllianceInvitationStateRecrutedMessage"; break;
    case 6393: return "AllianceCreationValidMessage"; break;
    case 6394: return "AllianceCreationStartedMessage"; break;
    case 6395: return "AllianceInvitationMessage"; break;
    case 6396: return "AllianceInvitationStateRecruterMessage"; break;
    case 6397: return "AllianceInvitedMessage"; break;
    case 6398: return "AllianceLeftMessage"; break;
    case 6399: return "AllianceGuildLeavingMessage"; break;
    case 6400: return "AllianceKickRequestMessage"; break;
    case 6401: return "AllianceInvitationAnswerMessage"; break;
    case 6402: return "AllianceJoinedMessage"; break;
    case 6403: return "AllianceInsiderInfoMessage"; break;
    case 6404: return "GuildFactsRequestMessage"; break;
    case 6405: return "GuildResultPageRequestMessage"; break;
    case 6406: return "GuildSearchRequestMessage"; break;
    case 6407: return "GameRolePlayShowActorWithEventMessage"; break;
    case 6408: return "AllianceListMessage"; break;
    case 6409: return "AllianceFactsRequestMessage"; break;
    case 6410: return "AllianceSearchRequestMessage"; break;
    case 6411: return "AllianceResultPageRequestMessage"; break;
    case 6412: return "GameContextRemoveElementWithEventMessage"; break;
    case 6413: return "GuildListMessage"; break;
    case 6414: return "AllianceFactsMessage"; break;
    case 6415: return "GuildFactsMessage"; break;
    case 6416: return "GameContextRemoveMultipleElementsWithEventsMessage"; break;
    case 6417: return "AllianceInsiderInfoRequestMessage"; break;
    case 6418: return "AllianceListErrorMessage"; break;
    case 6419: return "GuildListErrorMessage"; break;
    case 6420: return "GuildListRequestMessage"; break;
    case 6421: return "AllianceListRequestMessage"; break;
    case 6422: return "GuildInAllianceFactsMessage"; break;
    case 6423: return "AllianceFactsErrorMessage"; break;
    case 6424: return "GuildFactsErrorMessage"; break;
    case 6425: return "GameRolePlayDelayedObjectUseMessage"; break;
    case 6426: return "AllianceChangeGuildRightsMessage"; break;
    case 6427: return "AlliancePartialListMessage"; break;
    case 6428: return "WorldPrismsListMessage"; break;
    case 6429: return "WorldPrismsUpdateMessage"; break;
    case 6430: return "WorldPrismsListRegisterMessage"; break;
    case 6431: return "AlliancePartialListRequestMessage"; break;
    case 6432: return "PrismBonusRequestMessage"; break;
    case 6433: return "PrismBonusMessage"; break;
    case 6434: return "ServerSessionConstantsMessage"; break;
    case 6435: return "GuildVersatileInfoListMessage"; break;
    case 6436: return "AllianceVersatileInfoListMessage"; break;
    case 6437: return "PrismSettingsRequestMessage"; break;
    case 6438: return "PrismsListUpdateMessage"; break;
    case 6439: return "KohUpdateMessage"; break;
    case 6440: return "PrismsListMessage"; break;
    case 6441: return "PrismsListRegisterMessage"; break;
    case 6442: return "PrismSettingsErrorMessage"; break;
    case 6443: return "SetEnableAVARequestMessage"; break;
    case 6444: return "AllianceModificationStartedMessage"; break;
    case 6445: return "AllianceTaxCollectorDialogQuestionExtendedMessage"; break;
    case 6446: return "EmotePlayRelookedMessage"; break;
    case 6447: return "AllianceModificationEmblemValidMessage"; break;
    case 6448: return "AlliancePrismDialogQuestionMessage"; break;
    case 6449: return "AllianceModificationNameAndTagValidMessage"; break;
    case 6450: return "AllianceModificationValidMessage"; break;
    case 6451: return "PrismsInfoValidMessage"; break;
    case 6452: return "PrismFightAddedMessage"; break;
    case 6453: return "PrismFightRemovedMessage"; break;
    case 6454: return "UpdateMapPlayersAgressableStatusMessage"; break;
    case 6455: return "TaxCollectorStateUpdateMessage"; break;
    case 6456: return "UpdateSelfAgressableStatusMessage"; break;
    case 6457: return "MimicryObjectEraseRequestMessage"; break;
    case 6458: return "MimicryObjectPreviewMessage"; break;
    case 6459: return "ClientUIOpenedMessage"; break;
    case 6460: return "MimicryObjectFeedAndAssociateRequestMessage"; break;
    case 6461: return "MimicryObjectErrorMessage"; break;
    case 6462: return "MimicryObjectAssociatedMessage"; break;
    case 6463: return "ClientUIOpenedByObjectMessage"; break;
    case 6464: return "ExchangeBidPriceForSellerMessage"; break;
    case 6465: return "GameFightTurnStartPlayingMessage"; break;
    case 6466: return "PrismSetSabotagedRefusedMessage"; break;
    case 6467: return "PrismSetSabotagedAcceptedMessage"; break;
    case 6468: return "PrismSetSabotagedRequestMessage"; break;
    case 6469: return "SelectedServerDataExtendedMessage"; break;
    case 6470: return "ExchangeObjectTransfertListWithQuantityToInvMessage"; break;
    case 6471: return "CharacterLoadingCompleteMessage"; break;
    case 6472: return "PartyCompanionUpdateLightMessage"; break;
    case 6473: return "GameFightTurnResumeSlaveMessage"; break;
    case 6474: return "GameFightSpectatePlayerRequestMessage"; break;
    case 6475: return "BasicCharactersListMessage"; break;
    case 6476: return "TreasureQuestRequestMessage"; break;
    case 6477: return "TreasureQuestRequestAnswerMessage"; break;
    case 6478: return "TreasureQuestGiveUpRequestMessage"; break;
    case 6479: return "TreasureQuestFinishedMessage"; break;
    case 6480: return "TreasureQuestDigRequestAnswerMessage"; break;
    case 6481: return "TreasureQuestDigRequestMessage"; break;
    case 6482: return "TreasureQuestMessage"; break;
    case 6483: return "TreasureHuntFinishedMessage"; break;
    case 6484: return "TreasureHuntDigRequestAnswerMessage"; break;
    case 6485: return "TreasureHuntDigRequestMessage"; break;
    case 6486: return "TreasureHuntMessage"; break;
    case 6487: return "TreasureHuntGiveUpRequestMessage"; break;
    case 6488: return "TreasureHuntRequestMessage"; break;
    case 6489: return "TreasureHuntRequestAnswerMessage"; break;
    case 6490: return "GameFightNewWaveMessage"; break;
    case 6491: return "TreasureHuntAvailableRetryCountUpdateMessage"; break;
    case 6492: return "PortalUseRequestMessage"; break;
    case 6493: return "AreaFightModificatorUpdateMessage"; break;
    case 6494: return "PortalDialogQuestMessage"; break;
    case 6495: return "PortalDialogQuestionMessage"; break;
    case 6496: return "GameCautiousMapMovementRequestMessage"; break;
    case 6497: return "GameCautiousMapMovementMessage"; break;
    case 6498: return "TreasureHuntShowLegendaryUIMessage"; break;
    case 6499: return "TreasureHuntLegendaryRequestMessage"; break;
    case 6500: return "MapRunningFightDetailsExtendedMessage"; break;
    case 6501: return "PartyNameSetErrorMessage"; break;
    case 6502: return "PartyNameUpdateMessage"; break;
    case 6503: return "PartyNameSetRequestMessage"; break;
    case 6504: return "GameFightSpectatorJoinMessage"; break;
    case 6505: return "GuestModeMessage"; break;
    case 6506: return "GuestLimitationMessage"; break;
    case 6507: return "TreasureHuntFlagRequestAnswerMessage"; break;
    case 6508: return "TreasureHuntFlagRequestMessage"; break;
    case 6509: return "TreasureHuntDigRequestAnswerFailedMessage"; break;
    case 6510: return "TreasureHuntFlagRemoveRequestMessage"; break;
    case 6511: return "WarnOnHardcoreDeathMessage"; break;
    case 6512: return "WarnOnPermaDeathMessage"; break;
    case 6513: return "WarnOnPermaDeathStateMessage"; break;
    case 6514: return "RecoltingMessage"; break;
    case 6515: return "RecoltingWithAgeBonusMessage"; break;
    case 6516: return "PaddockBuyResultMessage"; break;
    case 6517: return "AccessoryPreviewMessage"; break;
    case 6518: return "AccessoryPreviewRequestMessage"; break;
    case 6519: return "ObtainedItemMessage"; break;
    case 6520: return "ObtainedItemWithBonusMessage"; break;
    case 6521: return "AccessoryPreviewErrorMessage"; break;
    case 6522: return "SymbioticObjectAssociateRequestMessage"; break;
    case 6523: return "WrapperObjectAssociatedMessage"; break;
    case 6524: return "WrapperObjectDissociateRequestMessage"; break;
    case 6525: return "CurrentServerStatusUpdateMessage"; break;
    case 6526: return "SymbioticObjectErrorMessage"; break;
    case 6527: return "SymbioticObjectAssociatedMessage"; break;
    case 6528: return "WrapperObjectAssociateRequestMessage"; break;
    case 6529: return "WrapperObjectErrorMessage"; break;
    case 6530: return "BasicStatMessage"; break;
    case 6531: return "PrismModuleExchangeRequestMessage"; break;
    case 6532: return "ExchangeObjectsRemovedMessage"; break;
    case 6533: return "ExchangeObjectsModifiedMessage"; break;
    case 6534: return "PVMFightRequestMessage"; break;
    case 6535: return "ExchangeObjectsAddedMessage"; break;
    case 6536: return "ComicReadingBeginMessage"; break;
    case 6537: return "StartupActionsAllAttributionMessage"; break;
    case 6538: return "StartupActionAddMessage"; break;
    case 6539: return "ReloginTokenStatusMessage"; break;
    case 6540: return "ReloginTokenRequestMessage"; break;
    case 6541: return "GameFightPlacementSwapPositionsRequestMessage"; break;
    case 6542: return "GameFightPlacementSwapPositionsOfferMessage"; break;
    case 6543: return "GameFightPlacementSwapPositionsCancelMessage"; break;
    case 6544: return "GameFightPlacementSwapPositionsMessage"; break;
    case 6545: return "GameActionFightActivateGlyphTrapMessage"; break;
    case 6546: return "GameFightPlacementSwapPositionsCancelledMessage"; break;
    case 6547: return "GameFightPlacementSwapPositionsAcceptMessage"; break;
    case 6548: return "GameFightPlacementSwapPositionsErrorMessage"; break;
    case 6549: return "CharacterSelectionWithRemodelMessage"; break;
    case 6550: return "CharactersListWithRemodelingMessage"; break;
    case 6551: return "CharacterReplayWithRemodelRequestMessage"; break;
    case 6552: return "ExchangeHandleAllMountStableMessage"; break;
    case 6553: return "ExchangeHandleListMountStableMessage"; break;
    case 6554: return "ExchangeMountsTakenFromPaddockMessage"; break;
    case 6555: return "ExchangeMountsStableAddMessage"; break;
    case 6556: return "ExchangeMountsStableRemoveMessage"; break;
    case 6557: return "ExchangeMountsStableBornAddMessage"; break;
    case 6558: return "ExchangeHandleExistingMountStableMessage"; break;
    case 6559: return "ExchangeMountsPaddockRemoveMessage"; break;
    case 6560: return "AbstractExchangeHandleMountStableMessage"; break;
    case 6561: return "ExchangeMountsPaddockAddMessage"; break;
    case 6562: return "ExchangeHandleMountsStableMessage"; break;
    case 6563: return "DisplayNumericalValuePaddockMessage"; break;
    case 6564: return "AbstactTaxCollectorListMessage"; break;
    case 6565: return "TopTaxCollectorListMessage"; break;
    case 6566: return "GuildTaxCollectorListMessage"; break;
    case 6567: return "ExchangeStartOkRunesTradeMessage"; break;
    case 6568: return "AbstractTaxCollectorListMessage"; break;
    case 6569: return "DecraftResultMessage"; break;
    case 6570: return "BasicStatMessageWithDatas"; break;
    case 6571: return "ZaapRespawnUpdatedMessage"; break;
    case 6572: return "ZaapRespawnSaveRequestMessage"; break;
    case 6573: return "BasicStatWithDataMessage"; break;
    case 6574: return "GameRolePlayArenaSwitchToGameServerMessage"; break;
    case 6575: return "GameRolePlayArenaSwitchToFightServerMessage"; break;
    case 6576: return "CraftPaymentKamasAddRequestMessage"; break;
    case 6577: return "CraftPaymentKamasAddMessage"; break;
    case 6578: return "ExchangeCraftPaymentModifiedMessage"; break;
    case 6579: return "ExchangeCraftPaymentModificationRequestMessage"; break;
    case 6580: return "IdolPartyLostMessage"; break;
    case 6581: return "IdolSelectedMessage"; break;
    case 6582: return "IdolPartyRegisterRequestMessage"; break;
    case 6583: return "IdolPartyRefreshMessage"; break;
    case 6584: return "IdolSelectErrorMessage"; break;
    case 6585: return "IdolListMessage"; break;
    case 6586: return "IdolFightPreparationUpdateMessage"; break;
    case 6587: return "IdolSelectRequestMessage"; break;
    case 6588: return "GuildMotdSetRequestMessage"; break;
    case 6589: return "ExchangeStoppedMessage"; break;
    case 6590: return "GuildMotdMessage"; break;
    case 6591: return "GuildMotdSetErrorMessage"; break;
    case 6592: return "JobBookSubscribeRequestMessage"; break;
    case 6593: return "JobBookSubscriptionMessage"; break;
    case 6594: return "ClientYouAreDrunkMessage"; break;
    case 6595: return "ExchangeCraftCountModifiedMessage"; break;
    case 6596: return "ChatSmileyExtraPackListMessage"; break;
    case 6597: return "ExchangeCraftCountRequestMessage"; break;
    case 6598: return "ExchangeCrafterJobLevelupMessage"; break;
    case 6599: return "JobExperienceOtherPlayerUpdateMessage"; break;
    case 6600: return "ExchangeStartOkRecycleTradeMessage"; break;
    case 6601: return "RecycleResultMessage"; break;
    case 6602: return "IdolsPresetDeleteMessage"; break;
    case 6603: return "IdolsPresetSaveMessage"; break;
    case 6604: return "IdolsPresetSaveResultMessage"; break;
    case 6605: return "IdolsPresetDeleteResultMessage"; break;
    case 6606: return "IdolsPresetUpdateMessage"; break;
    case 6607: return "AccountLinkRequiredMessage"; break;
    case 6608: return "ExternalAccountLinkMessage"; break;
    case 6609: return "IdentificationSteamMessage"; break;
    case 6610: return "TaxCollectorDisappearancesMessage"; break;
    case 6611: return "TaxCollectorMovementsOfflineMessage"; break;
    case 6612: return "ExchangeBidHouseUnsoldItemsMessage"; break;
    case 6613: return "ExchangeOfflineSoldItemsMessage"; break;
    case 6614: return "IdolsPresetUseResultMessage"; break;
    case 6615: return "IdolsPresetUseMessage"; break;
    case 6616: return "SubscriptionUpdateMessage"; break;
    case 6617: return "GameRefreshMonsterXpBoostsMessage"; break;
    case 6618: return "GameRefreshMonsterBoostsMessage"; break;
    case 6619: return "EditHavenBagCancelRequestMessage"; break;
    case 6620: return "HavenBagPackListMessage"; break;
    case 6621: return "CloseHavenBagFurnitureSequenceRequestMessage"; break;
    case 6622: return "MapComplementaryInformationsDataInHavenBagMessage"; break;
    case 6623: return "TeleportPlayerInHavenBagRequestMessage"; break;
    case 6624: return "TeleportInHavenBagOfferMessage"; break;
    case 6625: return "TeleportInHavenBagRequestedMessage"; break;
    case 6626: return "EditHavenBagRequestMessage"; break;
    case 6627: return "TeleportToHavenBagCloseMessage"; break;
    case 6628: return "EditHavenBagFinishedMessage"; break;
    case 6629: return "TeleportGroupInHavenBagRequestMessage"; break;
    case 6630: return "RoomAvailableUpdateMessage"; break;
    case 6631: return "ExitHavenBagRequestMessage"; break;
    case 6632: return "EditHavenBagStartMessage"; break;
    case 6633: return "TeleportToHavenBagAnswerMessage"; break;
    case 6634: return "HavenBagFurnituresMessage"; break;
    case 6635: return "OpenHavenBagFurnitureSequenceRequestMessage"; break;
    case 6636: return "EnterHavenBagRequestMessage"; break;
    case 6637: return "HavenBagFurnituresRequestMessage"; break;
    case 6638: return "ChangeHavenBagRoomRequestMessage"; break;
    case 6639: return "ChangeThemeRequestMessage"; break;
    case 6640: return "GameRolePlayArenaUpdatePlayerInfosWithTeamMessage"; break;
    case 6641: return "HavenBagDailyLoteryRequestMessage"; break;
    case 6642: return "InviteInHavenBagMessage"; break;
    case 6643: return "InviteInHavenBagOfferMessage"; break;
    case 6644: return "HavenBagDailyLoteryMessage"; break;
    case 6645: return "InviteInHavenBagClosedMessage"; break;
    case 6646: return "TeleportHavenBagAnswerMessage"; break;
    case 6647: return "TeleportHavenBagRequestMessage"; break;
    case 6648: return "HaapiApiKeyRequestMessage"; break;
    case 6649: return "HaapiApiKeyMessage"; break;
    case 6650: return "KickHavenBagRequest"; break;
    case 6651: return "RealIPThroughProxyMessage"; break;
    case 6652: return "KickHavenBagRequestMessage"; break;
    case 6653: return "SpellModifyFailureMessage"; break;
    case 6654: return "SpellModifySuccessMessage"; break;
    case 6655: return "SpellModifyRequestMessage"; break;
    case 6656: return "DareInformationsMessage"; break;
    case 6657: return "DareVersatileListMessage"; break;
    case 6658: return "DareSubscribedListMessage"; break;
    case 6659: return "DareInformationsRequestMessage"; break;
    case 6660: return "DareSubscribedMessage"; break;
    case 6661: return "DareListMessage"; break;
    case 6662: return "AggregateStatWithDataMessage"; break;
    case 6663: return "DareCreatedListMessage"; break;
    case 6664: return "ExchangeStartedTaxCollectorShopMessage"; break;
    case 6665: return "DareCreationRequestMessage"; break;
    case 6666: return "DareSubscribeRequestMessage"; break;
    case 6667: return "DareErrorMessage"; break;
    case 6668: return "DareCreatedMessage"; break;
    case 6669: return "AggregateStatMessage"; break;
    case 6670: return "ExchangePodsModifiedMessage"; break;
    case 6671: return "RewardConsumeValidationMessage"; break;
    case 6672: return "RewardConsumeRequestMessage"; break;
    case 6673: return "RewardListMessage"; break;
    case 6674: return "RewardWonMessage"; break;
    case 6675: return "DareRewardConsumeValidationMessage"; break;
    case 6676: return "DareRewardConsumeRequestMessage"; break;
    case 6677: return "DareRewardsListMessage"; break;
    case 6678: return "DareRewardWonMessage"; break;
    case 6679: return "DareCanceledMessage"; break;
    case 6680: return "DareCancelRequestMessage"; break;
    case 6681: return "DareWonMessage"; break;
    case 6682: return "DareWonListMessage"; break;
    case 6683: return "AllianceMotdSetErrorMessage"; break;
    case 6684: return "SocialNoticeSetErrorMessage"; break;
    case 6685: return "AllianceMotdMessage"; break;
    case 6686: return "SocialNoticeSetRequestMessage"; break;
    case 6687: return "AllianceMotdSetRequestMessage"; break;
    case 6688: return "SocialNoticeMessage"; break;
    case 6689: return "GuildBulletinMessage"; break;
    case 6690: return "AllianceBulletinMessage"; break;
    case 6691: return "GuildBulletinSetErrorMessage"; break;
    case 6692: return "AllianceBulletinSetErrorMessage"; break;
    case 6693: return "AllianceBulletinSetRequestMessage"; break;
    case 6694: return "GuildBulletinSetRequestMessage"; break;
    case 6695: return "BulletinMessage"; break;
    case 6696: return "MountHarnessDissociateRequestMessage"; break;
    case 6697: return "MountHarnessColorsUpdateRequestMessage"; break;
    case 6698: return "RefreshCharacterStats"; break;
    case 6699: return "RefreshCharacterStatsMessage"; break;
    case 6700: return "ArenaFighterLeaveMessage"; break;
    case 6701: return "FocusedExchangeReadyMessage"; break;
    case 6702: return "FinishMoveListRequestMessage"; break;
    case 6703: return "FinishMoveSetRequestMessage"; break;
    case 6704: return "FinishMoveListMessage"; break;
    case 6705: return "SpellVariantActivationMessage"; break;
    case 6706: return "ShortcutBarReplacedMessage"; break;
    case 6707: return "SpellVariantActivationRequestMessage"; break;
    case 6708: return "EnterOtherHavenBagRequestMessage"; break;
    case 6709: return "HavenBagsSharedMessage"; break;
    case 6710: return "HavenBagsAutorisationsUpdateRequestMessage"; break;
    case 6711: return "HavenBagsSharedRequestMessage"; break;
    case 6712: return "GameRolePlayShowMultipleActorsMessage"; break;
    case 6713: return "HavenBagPermissionsUpdateMessage"; break;
    case 6714: return "HavenBagPermissionsUpdateRequestMessage"; break;
    case 6715: return "InteractiveUseWithParamRequestMessage"; break;
    case 6716: return "MapFightStartPositionsUpdateMessage"; break;
    case 6717: return "FollowedQuestsMessage"; break;
    case 6718: return "UnfollowQuestRequest"; break;
    case 6719: return "FollowQuestRequest"; break;
    case 6720: return "UnfollowQuestObjectiveRequest"; break;
    case 6721: return "FollowQuestObjectiveRequest"; break;
    case 6722: return "RefreshFollowedQuestsOrderRequestMessage"; break;
    case 6723: return "UnfollowQuestObjectiveRequestMessage"; break;
    case 6724: return "FollowQuestObjectiveRequestMessage"; break;
    case 6725: return "HouseSellingStatusMessage"; break;
    case 6726: return "HouseTeleportRequestMessage"; break;
    case 6727: return "HouseSellingUpdateMessage"; break;
    case 6728: return "GameRolePlayArenaUpdatePlayerInfosAllQueuesMessage"; break;
    case 6729: return "ChatCommunityChannelSetCommunityRequestMessage"; break;
    case 6730: return "ChatCommunityChannelCommunityMessage"; break;
    case 6731: return "MigratedServerListMessage"; break;
    case 6732: return "CharacterCanBeCreatedRequestMessage"; break;
    case 6733: return "CharacterCanBeCreatedResultMessage"; break;
    case 6734: return "AbstractPresetSaveResultMessage"; break;
    case 6735: return "AbstractPresetDeleteMessage"; break;
    case 6736: return "AbstractPresetSaveMessage"; break;
    case 6737: return "PortalDialogCreationMessage"; break;
    case 6738: return "CurrentMapInstanceMessage"; break;
    case 6739: return "ResetCharacterStatsRequestMessage"; break;
    }

    return QString("UnknownMessage (%1)").arg(id);
}
